select(Sex, Lark_ID, Interval_1, Interval_2, Interval_3, Interval_4) %>%
pivot_longer(., cols = 3:6, names_to = "interval", values_to = "detection") %>%
group_by(Lark_ID, Sex) %>%
filter(!is.na(detection)) %>%
summarise(firstDet = first(detection)) %>%
right_join(., surveyData, by = 'Lark_ID', keep = F) %>%
select(!(Sex.x)) %>%
rename(Sex = Sex.y)
## Add a "first detected interval" column
surveyData <-
surveyData %>%
filter(!is.na(Sex)) %>%
select(Sex, Lark_ID, Interval_1, Interval_2, Interval_3, Interval_4) %>%
pivot_longer(., cols = 3:6, names_to = "interval", values_to = "detection") %>%
group_by(Lark_ID, Sex) %>%
filter(!is.na(detection)) %>%
summarise(firstDet = first(interval)) %>%
mutate(firstInterval = ifelse(firstDet == "Interval_1",1,
ifelse(firstDet == "Interval_2", 2,
ifelse(firstDet == "Interval_3", 3,
ifelse(firstDet == "Interval_4", 4, NA))))) %>%
right_join(., surveyData, by = 'Lark_ID', keep = F) %>%
select(!(Sex.x)) %>%
select(!firstDet.x) %>%
rename(firstDet = firstDet.y, Sex = Sex.y)
View(surveyData)
## Incorporating removal models
encounters <-
surveyData %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval = 1, 1, 0),
interval2 = ifelse(firstInterval = 2, 1, 0),
interval3 = ifelse(firstInterval = 3, 1, 0),
interval4 = ifelse(firstInterval = 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4) %>%
test <- as.matrix(encounters)
## Incorporating removal models
encounters <-
surveyData %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4) %>%
test <- as.matrix(encounters)
## Incorporating removal models
encounters <-
surveyData %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4)
View(encounters)
test <- matrix(nrow = 214, ncol = 4)
test <- cbind(encounters[,2:5])
rownames(test) <- encounters$Site_ID
test
test <- matrix(nrow = 214, ncol = 4)
rownames(test) <- encounters$Site_ID
test <- as.matrix(encounters)
rownames(test) <- list(Site_ID)
test
test <- matrix(nrow = 214, ncol = 4)
rownames(test) <- encounters$Site_ID
as.matrix(yDatDistance)
encounters <-
surveyData %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4) %>%
group_by(Site_ID) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4))
View(encounters)
test <- matrix(nrow = 214, ncol = 4)
rownames(test) <- encounters$Site_ID
test <- cbind(encounters[,2:5])
test
test[is.na(test)] <- 0
test
umfDR <- unmarkedFrameGDR(yDistance = as.matrix(yDatDistance), yRemoval = as.matrix(test), numPrimary = 1,
siteCovs = NULL, dist.breaks = c(0,25,100,200,400), unitsIn = "m")
yRemoval <- matrix(nrow = 214, ncol = 4)
rownames(yRemoval) <- encounters$Site_ID
yRemoval <- cbind(encounters[,2:5])
yRemoval[is.na(yRemoval)] <- 0
rm(test)
umfDR <- unmarkedFrameGDR(yDistance = as.matrix(yDatDistance), yRemoval = as.matrix(yRemoval), numPrimary = 1,
siteCovs = NULL, dist.breaks = c(0,25,100,200,400), unitsIn = "m")
umfDR
summary(umfDR)
ibrary(tidyverse)
library(tidyverse)
library(readxl)
library(lubridate)
library(suncalc)
library(ggpmisc)
library(unmarked)
library(AICcmodavg)
# Review and organize data, changing formats and variable names as needed.
#surveyData <- read_xlsx("~/Documents/GitHub/hornedLarks/WV_SurveyOutput.xlsx")
surveyData <- read_csv("~/Documents/GitHub/hornedLarks/WV_SHLA_22.csv")
names(surveyData)[1] <- 'surveyEvent'
#surveyData$Count_Date <- mdy(surveyData$Count_Date)
surveyData$Count_Date <- mdy(surveyData$Survey_Date)
#surveyData$Start_Time <- hms(surveyData$Start_Time)
surveyData$Start_Time <- hms(surveyData$Survey_Time)
surveyData$Site_ID <- factor(surveyData$Site_ID)
surveyData$Observer <- factor(surveyData$Observer)
surveyData$Sky_Code <- factor(surveyData$Sky_Code, levels = c("0","1","2","3","4"),
labels = c("Clear","Partly cloudy","Mostly cloudy","Fog or smoke","Drizzle"))
surveyData$Sex <- factor(surveyData$Sex, levels = c("M","F","U"), labels = c("Male","Female","Unknown"))
surveyData$Age <- factor(surveyData$Age, levels = c("A", "J"), labels = c("Adult", "Juvenile"))
surveyData$`Distance Band` <- factor(surveyData$`Distance Band`)
names(surveyData)[19] <- 'distanceBand'
surveyData$Interval_1 <- ifelse(surveyData$Interval_1 == "X", NA, surveyData$Interval_1)
surveyData$Interval_2 <- ifelse(surveyData$Interval_2 == "X", NA, surveyData$Interval_2)
surveyData$Interval_3 <- ifelse(surveyData$Interval_3 == "X", NA, surveyData$Interval_3)
surveyData$Interval_4 <- ifelse(surveyData$Interval_4 == "X", NA, surveyData$Interval_4)
surveyData$Interval_1 <- factor(surveyData$Interval_1, levels = c("C","S","V"), labels =
c("Calling", "Singing", "Visual"))
surveyData$Interval_2 <- factor(surveyData$Interval_2, levels = c("C","S","V"), labels =
c("Calling", "Singing", "Visual"))
surveyData$Interval_3 <- factor(surveyData$Interval_3, levels = c("C","S","V"), labels =
c("Calling", "Singing", "Visual"))
surveyData$Interval_4 <- factor(surveyData$Interval_4, levels = c("C","S","V"), labels =
c("Calling", "Singing", "Visual"))
surveyData$dayOfYear <- yday(surveyData$Count_Date) # create a day-of-year variable for analysis
## Add a "first detected by..." column to survey data:
surveyData <-
surveyData %>%
filter(!is.na(Sex)) %>%
select(Sex, Lark_ID, Interval_1, Interval_2, Interval_3, Interval_4) %>%
pivot_longer(., cols = 3:6, names_to = "interval", values_to = "detection") %>%
group_by(Lark_ID, Sex) %>%
filter(!is.na(detection)) %>%
summarise(firstDet = first(detection)) %>%
right_join(., surveyData, by = 'Lark_ID', keep = F) %>%
select(!(Sex.x)) %>%
rename(Sex = Sex.y)
## Add a "first detected interval" column
surveyData <-
surveyData %>%
filter(!is.na(Sex)) %>%
select(Sex, Lark_ID, Interval_1, Interval_2, Interval_3, Interval_4) %>%
pivot_longer(., cols = 3:6, names_to = "interval", values_to = "detection") %>%
group_by(Lark_ID, Sex) %>%
filter(!is.na(detection)) %>%
summarise(firstDet = first(interval)) %>%
mutate(firstInterval = ifelse(firstDet == "Interval_1",1,
ifelse(firstDet == "Interval_2", 2,
ifelse(firstDet == "Interval_3", 3,
ifelse(firstDet == "Interval_4", 4, NA))))) %>%
right_join(., surveyData, by = 'Lark_ID', keep = F) %>%
select(!(Sex.x)) %>%
select(!firstDet.x) %>%
rename(firstDet = firstDet.y, Sex = Sex.y)
# Get sunrise times to look at effect of survey timing in detections,
# here using the Corvallis airport as the location. We could calculate
# sunrise based on the lat/long of each survey point, but they are
# all going to have roughly the same sunrise so for ease I'm simply estimating
# sunrise at a single, central location.
# calculate sunrise times at Corvallis Airport on each survey date.
sunriseTimes <- getSunlightTimes(date = surveyData$Count_Date, lat = 44.50, lon = -123.28,
keep = c("sunrise"), tz="America/Los_Angeles")
#create a new variable in surveyData that has sunrise matched to the survey point.
#careful, here, because there is no matching function (i.e., this only works if the
#two data frames are sorted in the same order. This should be the case unless you
#sort one after calling this function).
surveyData$sunrise <- sunriseTimes$sunrise
#subtract the two times to get decimal hours after sunrise.
surveyData$mas <- 60*((surveyData$Start_Time@hour + surveyData$Start_Time@minute/60) -
(hour(surveyData$sunrise) + minute(surveyData$sunrise)/60))
#clean up
rm(sunriseTimes)
# Read in survey location and habitat data
habitatData <- read_csv("tbl_survey_locations_exported_09_26_2022_pct_suitable_2021.csv")
habitatData$Site_ID <- factor(habitatData$Site_ID)
habitatAndSurveyData <-
habitatData %>%
select(Site_ID,ln_UTM1083,lt_UTM1083,ln_WGS84,lt_WGS84, pct_suitable_2021) %>%
right_join(.,surveyData, by = 'Site_ID', keep = F)
habitatAndSurveyData$Site_ID <- factor(habitatAndSurveyData$Site_ID)
habitatAndSurveyData$Observer <- factor(habitatAndSurveyData$Observer)
# Make encounter histories for detected birds across intervals
surveyData$encounterHistory <- paste(if_else(surveyData$Interval_1 == "None", 0,1),
if_else(surveyData$Interval_2 == "None", 0,1),
if_else(surveyData$Interval_3 == "None", 0,1),
if_else(surveyData$Interval_4 == "None", 0,1),
sep = "")
dists <-
surveyData %>%
group_by(Site_ID) %>%
mutate(distance = ifelse(distanceBand == 1, 12.5,
ifelse(distanceBand == 2, 61,
ifelse(distanceBand == 3, 150,
ifelse(distanceBand == 4, 300, NA))))) %>%
select(Site_ID, distance, Sex, firstDet) %>%
filter(!is.na(distance), firstDet == "Singing", Sex == "Male")
## Note here that we need the "as.data.frame" argument because 'dists' is a tidyverse tibble,
## and unmarked doesn't seem to like tibbles. This forces it into a standard R data frame.
yDat <- formatDistData(distData = as.data.frame(dists), distCol = "distance", transectNameCol = "Site_ID",
dist.breaks = c(0,25,100,200,400))
## Create a data frame of site-level covariates.
covs <-
surveyData %>%
group_by(Site_ID) %>%
summarise(site = first(Site_ID),
observer = first(Observer),
temp = first(Temp),
avgNoise = first(Avg_Noise),
dayOfYear = first (dayOfYear),
mas = first(mas))
encounters <-
surveyData %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4) %>%
group_by(Site_ID) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4))
yRemoval <- matrix(nrow = 214, ncol = 4)
rownames(yRemoval) <- encounters$Site_ID
yRemoval <- cbind(encounters[,2:5])
yRemoval[is.na(yRemoval)] <- 0
distsRemoval <-
surveyData %>%
group_by(Site_ID) %>%
mutate(distance = ifelse(distanceBand == 1, 12.5,
ifelse(distanceBand == 2, 61,
ifelse(distanceBand == 3, 150,
ifelse(distanceBand == 4, 300, NA))))) %>%
select(Site_ID, distance, Sex, firstDet) %>%
filter(!is.na(distance), firstDet == "Singing", Sex == "Male")
## Note here that we need the "as.data.frame" argument because 'dists' is a tidyverse tibble,
## and unmarked doesn't seem to like tibbles. This forces it into a standard R data frame.
yDatDistance <- formatDistData(distData = as.data.frame(distsRemoval), distCol = "distance", transectNameCol = "Site_ID",
dist.breaks = c(0,25,100,200,400))
umfDR <- unmarkedFrameGDR(yDistance = as.matrix(yDatDistance), yRemoval = as.matrix(yRemoval), numPrimary = 1,
siteCovs = covs, dist.breaks = c(0,25,100,200,400), unitsIn = "m")
## Incorporating removal models
encounters <-
surveyData %>%
filter(!is.na(distance), firstDet == "Singing", Sex == "Male")%>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4) %>%
group_by(Site_ID) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4))
## Incorporating removal models
encounters <-
surveyData %>%
filter(firstDet == "Singing", Sex == "Male") %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4) %>%
group_by(Site_ID) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4))
yRemoval <- matrix(nrow = 214, ncol = 4)
rownames(yRemoval) <- encounters$Site_ID
## Incorporating removal models
encounters <-
surveyData %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4) %>%
group_by(Site_ID) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4))
View(dists)
View(distsRemoval)
yDatDistance
surveyData %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4)
surveyData %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4, Sex)
surveyData %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4, Sex, firstDet)
encounters <-
surveyData %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4, Sex, firstDet) %>%
filter(Sex == "Male", firstDet == "Singing") %>%
group_by(Site_ID) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4))
View(encounters)
yRemoval <- matrix(nrow = 214, ncol = 4)
rownames(yRemoval) <- encounters$Site_ID
distsRemoval <-
surveyData %>%
group_by(Site_ID) %>%
mutate(distance = ifelse(distanceBand == 1, 12.5,
ifelse(distanceBand == 2, 61,
ifelse(distanceBand == 3, 150,
ifelse(distanceBand == 4, 300, NA))))) %>%
select(Site_ID, distance, Sex, firstDet) %>%
filter(!is.na(distance), firstDet == "Singing", Sex == "Male")
## Incorporating removal models
encounters <-
surveyData %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4, Sex, firstDet) %>%
group_by(Site_ID) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4))
yRemoval <- matrix(nrow = 214, ncol = 4)
rownames(yRemoval) <- encounters$Site_ID
yRemoval <- cbind(encounters[,2:5])
yRemoval[is.na(yRemoval)] <- 0
encounters <-
surveyData %>%
group_by(Site_ID, Sex, firstDet) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
filter(Sex == "Male", firstDet == "Singing") %>%
select(Site_ID, interval1, interval2, interval3, interval4) %>%
group_by(Site_ID) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4))
## Incorporating removal models
encounters <-
surveyData %>%
group_by(Site_ID, Sex, firstDet) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4) %>%
group_by(Site_ID) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4)) %>%
filter(Sex == "Male", firstDet == "Singing")
## Incorporating removal models
encounters <-
surveyData %>%
group_by(Site_ID, Sex, firstDet) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4, Sex, firstDet) %>%
group_by(Site_ID) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4)) %>%
filter(Sex == "Male", firstDet == "Singing")
## Incorporating removal models
encounters <-
surveyData %>%
group_by(Site_ID, Sex, firstDet) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4, Sex, firstDet) %>%
group_by(Site_ID, Sex, firstDet) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4)) %>%
filter(Sex == "Male", firstDet == "Singing")
## Incorporating removal models
encounters <-
surveyData %>%
group_by(Site_ID, Sex, firstDet) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4, Sex, firstDet) %>%
group_by(Site_ID, Sex, firstDet) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4))
## Incorporating removal models
encounters <-
surveyData %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4, Sex, firstDet) %>%
group_by(Site_ID, Sex, firstDet) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4))
## Incorporating removal models
encounters <-
surveyData %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1, 1, 0),
interval2 = ifelse(firstInterval == 2, 1, 0),
interval3 = ifelse(firstInterval == 3, 1, 0),
interval4 = ifelse(firstInterval == 4, 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4, Sex, firstDet) %>%
group_by(Site_ID) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4))
## Incorporating removal models
encounters <-
surveyData %>%
group_by(Site_ID) %>%
mutate(interval1 = ifelse(firstInterval == 1 & Sex == "Male" & firstDet == "Singing", 1, 0),
interval2 = ifelse(firstInterval == 2 & Sex == "Male" & firstDet == "Singing", 1, 0),
interval3 = ifelse(firstInterval == 3 & Sex == "Male" & firstDet == "Singing", 1, 0),
interval4 = ifelse(firstInterval == 4 & Sex == "Male" & firstDet == "Singing", 1, 0)) %>%
select(Site_ID, interval1, interval2, interval3, interval4, Sex, firstDet) %>%
group_by(Site_ID) %>%
summarise(interval1 = sum(interval1),
interval2 = sum(interval2),
interval3 = sum(interval3),
interval4 = sum(interval4))
yRemoval <- matrix(nrow = 214, ncol = 4)
rownames(yRemoval) <- encounters$Site_ID
yRemoval <- cbind(encounters[,2:5])
yRemoval[is.na(yRemoval)] <- 0
umfDR <- unmarkedFrameGDR(yDistance = as.matrix(yDatDistance), yRemoval = as.matrix(yRemoval), numPrimary = 1,
siteCovs = covs, dist.breaks = c(0,25,100,200,400), unitsIn = "m")
summary(umfDR)
drNull <- gdistremoval(lambdaformula = ~1, phiformula = ~1, removalformula = ~1,
distanceformula = ~1, data = umfDR, keyfun = "halfnorm",
output = "density", unitsOut = "kmsq", mixture = "ZIP")
summary(drNull)
backTransform(drNull, type = "det")
backTransform(drNull, type = "lambda")
backTransform(drNull, type = "phi")
backTransform(drNull, type = "alpha")
exp(1.72)
drNull <- gdistremoval(lambdaformula = ~1, phiformula = ~1, removalformula = ~1,
distanceformula = ~1, data = umfDR, keyfun = "halfnorm",
output = "density", unitsOut = "ha", mixture = "ZIP")
summary(drNull)
exp(-0.94)
drNull <- gdistremoval(lambdaformula = ~1, phiformula = ~1, removalformula = ~1,
distanceformula = ~1, data = umfDR, keyfun = "halfnorm",
output = "density", unitsOut = "kmsq", mixture = "ZIP")
summary(drNull)
exp(1.72*4.36*-1.26)
exp(1.72*-1.26)
exp(4.36)
exp(1.72)
exp(4.36)/(1+exp(4.36))
