mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number, size = number)) + geom_point() +
scale_y_continuous(name = "Larks present?", breaks = c(0,1), labels = c("No","Yes")) +
theme(legend.position = "none", panel.grid.minor.y = element_blank()) +
xlab("Predicted proportion of suitable habitat") + coord_fixed(ratio = 1) +
stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial)) +
scale_color_viridis_b()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number, size = number)) + geom_point() +
scale_y_continuous(name = "Larks present?", breaks = c(0,1), labels = c("No","Yes")) +
theme(legend.position = "right", panel.grid.minor.y = element_blank()) +
xlab("Predicted proportion of suitable habitat") + coord_fixed(ratio = 1) +
stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial)) +
scale_color_viridis_b()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number, size = number)) + geom_point() +
scale_y_continuous(name = "Larks present?", breaks = c(0,1), labels = c("No","Yes")) +
theme(legend.position = "right", panel.grid.minor.y = element_blank()) +
xlab("Predicted proportion of suitable habitat") + coord_fixed(ratio = 1) +
stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial),
show.legend = F) +
scale_color_viridis_b()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number, size = number)) + geom_point(show.legend = F) +
scale_y_continuous(name = "Larks present?", breaks = c(0,1), labels = c("No","Yes")) +
theme(legend.position = "right", panel.grid.minor.y = element_blank()) +
xlab("Predicted proportion of suitable habitat") + coord_fixed(ratio = 1) +
stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial),
show.legend = F) +
scale_color_viridis_b()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number, size = number)) + geom_point() +
scale_y_continuous(name = "Larks present?", breaks = c(0,1), labels = c("No","Yes")) +
theme(legend.position = "right", panel.grid.minor.y = element_blank()) +
xlab("Predicted proportion of suitable habitat") + coord_fixed(ratio = 1) +
stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial),
show.legend = F) +
scale_color_viridis_b()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number, size = number)) + geom_point() +
scale_y_continuous(name = "Larks present?", breaks = c(0,1), labels = c("No","Yes")) +
theme(legend.position = "right", panel.grid.minor.y = element_blank()) +
xlab("Predicted proportion of suitable habitat") + coord_fixed(ratio = 1) +
stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial),
show.legend = F) +
scale_color_viridis_c()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number)) + geom_point(aes(size = number), show.legend = F)) +
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number)) + geom_point(aes(size = number), show.legend = F) +
scale_y_continuous(name = "Larks present?", breaks = c(0,1), labels = c("No","Yes")) +
theme(legend.position = "right", panel.grid.minor.y = element_blank()) +
xlab("Predicted proportion of suitable habitat") + coord_fixed(ratio = 1) +
stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial),
show.legend = F) +
scale_color_viridis_c()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number)) + geom_point(aes(size = number), show.legend = T) +
scale_y_continuous(name = "Larks present?", breaks = c(0,1), labels = c("No","Yes")) +
theme(legend.position = "right", panel.grid.minor.y = element_blank()) +
xlab("Predicted proportion of suitable habitat") + coord_fixed(ratio = 1) +
stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial),
show.legend = F) +
scale_color_viridis_c()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number)) + geom_point() +
scale_y_continuous(name = "Larks present?", breaks = c(0,1), labels = c("No","Yes")) +
theme(legend.position = "right", panel.grid.minor.y = element_blank()) +
xlab("Predicted proportion of suitable habitat") + coord_fixed(ratio = 1) +
stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial),
show.legend = F) +
scale_color_viridis_c()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number)) + geom_point() +
scale_y_continuous(name = "Larks present?", breaks = c(0,1), labels = c("No","Yes")) +
theme(legend.position = "right", panel.grid.minor.y = element_blank()) +
xlab("Predicted proportion of suitable habitat") + coord_fixed(ratio = 1) +
stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial),
show.legend = F)
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number)) + geom_point(aes(size = number)) +
scale_y_continuous(name = "Larks present?", breaks = c(0,1), labels = c("No","Yes")) +
theme(legend.position = "none", panel.grid.minor.y = element_blank()) +
xlab("Predicted proportion of suitable habitat") + coord_fixed(ratio = 1) +
stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial),
show.legend = F)
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number)) + geom_point(label = number) +
scale_y_continuous(name = "Larks present?", breaks = c(0,1), labels = c("No","Yes")) +
theme(legend.position = "none", panel.grid.minor.y = element_blank()) +
xlab("Predicted proportion of suitable habitat") + coord_fixed(ratio = 1) +
stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial),
show.legend = F)
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number)) + geom_point(aes(label = number)) +
scale_y_continuous(name = "Larks present?", breaks = c(0,1), labels = c("No","Yes")) +
theme(legend.position = "none", panel.grid.minor.y = element_blank()) +
xlab("Predicted proportion of suitable habitat") + coord_fixed(ratio = 1) +
stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial),
show.legend = F)
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = presence, color = number)) + geom_point(aes(size = number)) +
scale_y_continuous(name = "Larks present?", breaks = c(0,1), labels = c("No","Yes")) +
theme(legend.position = "none", panel.grid.minor.y = element_blank()) +
xlab("Predicted proportion of suitable habitat") + coord_fixed(ratio = 1) +
stat_smooth(method="glm", se=TRUE, method.args = list(family=binomial),
show.legend = F)
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number)) + geom_point()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected")
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected")
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_brewer()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_viridis_d()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_viridis_c()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_viridis_b()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_fermenter()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_distiller()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_ordinal()
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_viridis_b(option = "C")
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_viridis_b(option = "A")
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_viridis_b(option = "B")
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_viridis_b(option = "C")
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_viridis_b(option = "D")
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_viridis_b(option = "E")
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_viridis_b(option = "F")
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_viridis_b(option = "C")
habitatAndSurveyData %>%
mutate(presence = ifelse(Number_Detected>0,1,0)) %>%
group_by(surveyEvent) %>%
summarise(habitat = first(pct_suitable_2021), presence = first(presence), number = max(Number_Detected)) %>%
ggplot(.,aes(x = habitat, y = number, color = number)) + geom_point() +
labs(x = "Predicted proportion of suitable habitat", y = "Number of larks detected") +
scale_color_viridis_b(option = "C", guide = NULL)
habitatAndSurveyData %>%
ggplot(., aes(x = pct_suitable_2021, y = dayOfYear)) +
geom_point()
library(tidyverse)
library(readxl)
library(lubridate)
library(suncalc)
library(ggpmisc)
# Review and organize data, changing formats and variable names as needed.
#surveyData <- read_xlsx("~/Documents/GitHub/hornedLarks/WV_SurveyOutput.xlsx")
surveyData <- read_csv("~/Documents/GitHub/hornedLarks/WV_SHLA_22.csv")
names(surveyData)[1] <- 'surveyEvent'
#surveyData$Count_Date <- mdy(surveyData$Count_Date)
surveyData$Count_Date <- mdy(surveyData$Survey_Date)
#surveyData$Start_Time <- hms(surveyData$Start_Time)
surveyData$Start_Time <- hms(surveyData$Survey_Time)
surveyData$Sky_Code <- factor(surveyData$Sky_Code, levels = c("0","1","2","3","4"),
labels = c("Clear","Partly cloudy","Mostly cloudy","Fog or smoke","Drizzle"))
surveyData$Sex <- factor(surveyData$Sex, levels = c("M","F","U"), labels = c("Male","Female","Unknown"))
surveyData$Age <- factor(surveyData$Age, levels = c("A", "J"), labels = c("Adult", "Juvenile"))
surveyData$`Distance Band` <- factor(surveyData$`Distance Band`)
names(surveyData)[19] <- 'distanceBand'
surveyData$Interval_1 <- factor(surveyData$Interval_1, levels = c("C","S","V","X"), labels =
c("Calling", "Singing", "Visual","None"))
surveyData$Interval_2 <- factor(surveyData$Interval_2, levels = c("C","S","V","X"), labels =
c("Calling", "Singing", "Visual","None"))
surveyData$Interval_3 <- factor(surveyData$Interval_3, levels = c("C","S","V","X"), labels =
c("Calling", "Singing", "Visual","None"))
surveyData$Interval_4 <- factor(surveyData$Interval_4, levels = c("C","S","V","X"), labels =
c("Calling", "Singing", "Visual","None"))
surveyData$dayOfYear <- yday(surveyData$Count_Date) # create a day-of-year variable for analysis
# Get sunrise times to look at effect of survey timing in detections,
# here using the Corvallis airport as the location. We could calculate
# sunrise based on the lat/long of each survey point, but they are
# all going to have roughly the same sunrise so for ease I'm simply estimating
# sunrise at a single, central location.
# calculate sunrise times at Corvallis Airport on each survey date.
sunriseTimes <- getSunlightTimes(date = surveyData$Count_Date, lat = 44.50, lon = -123.28,
keep = c("sunrise"), tz="America/Los_Angeles")
#create a new variable in surveyData that has sunrise matched to the survey point.
#careful, here, because there is no matching function (i.e., this only works if the
#two data frames are sorted in the same order. This should be the case unless you
#sort one after calling this function).
surveyData$sunrise <- sunriseTimes$sunrise
#subtract the two times to get decimal hours after sunrise.
surveyData$mas <- 60*((surveyData$Start_Time@hour + surveyData$Start_Time@minute/60) -
(hour(surveyData$sunrise) + minute(surveyData$sunrise)/60))
#clean up
rm(sunriseTimes)
# Read in survey location and habitat data
habitatData <- read_csv("tbl_survey_locations_exported_09_26_2022_pct_suitable_2021.csv")
habitatAndSurveyData <-
habitatData %>%
select(Site_ID,ln_UTM1083,lt_UTM1083,ln_WGS84,lt_WGS84, pct_suitable_2021) %>%
right_join(.,surveyData, by = 'Site_ID', keep = F)
View(surveyData)
surveyData$Site_ID <- factor(surveyData$Site_ID)
levels(surveyData$Site_ID)
surveyData %>%
group_by(Site_ID) %>%
mutate(distance = ifelse(distanceBand = 1, 12.5,
ifelse(distanceBand = 2, 61,
ifelse(distanceBand = 3, 150,
ifelse(distanceBand = 4, 300, NA)))))
surveyData %>%
group_by(Site_ID) %>%
mutate(distance = ifelse(distanceBand == 1, 12.5,
ifelse(distanceBand == 2, 61,
ifelse(distanceBand == 3, 150,
ifelse(distanceBand == 4, 300, NA)))))
surveyData %>%
group_by(Site_ID) %>%
mutate(distance = ifelse(distanceBand == 1, 12.5,
ifelse(distanceBand == 2, 61,
ifelse(distanceBand == 3, 150,
ifelse(distanceBand == 4, 300, NA))))) %>%
select(Site_ID, distance)
## Distance sampling.
dists <-
surveyData %>%
group_by(Site_ID) %>%
mutate(distance = ifelse(distanceBand == 1, 12.5,
ifelse(distanceBand == 2, 61,
ifelse(distanceBand == 3, 150,
ifelse(distanceBand == 4, 300, NA))))) %>%
select(Site_ID, distance)
View(dists)
library(unmarked)
install.packages("unmarked")
library(unmarked)
yDat <- formatDistData(distData = dists, distCol = "distance", transectNameCol = "Site_ID",
dist.breaks = c(0,25,100,200,400))
dists <-
surveyData %>%
group_by(Site_ID) %>%
mutate(distance = ifelse(distanceBand == 1, 12.5,
ifelse(distanceBand == 2, 61,
ifelse(distanceBand == 3, 150,
ifelse(distanceBand == 4, 300, NA))))) %>%
select(Site_ID, distance) %>%
filter(!is.na(distance))
levels(dists$Site_ID)
yDat <- formatDistData(distData = dists, distCol = "distance", transectNameCol = "Site_ID",
dist.breaks = c(0,25,100,200,400))
View(dists)
yDat <- formatDistData(distData = as.data.frame(dists), distCol = "distance", transectNameCol = "Site_ID",
dist.breaks = c(0,25,100,200,400))
yDat
covs <-
habitatAndSurveyData %>%
select(Observer, Temp, Avg_Noise, dayOfYear, mas)
covs <-
habitatAndSurveyData %>%
select(Site_ID, Observer, Temp, Avg_Noise, dayOfYear, mas)
habitatAndSurveyData$Site_ID <- factor(habitatAndSurveyData$Site_ID)
covs <-
habitatAndSurveyData %>%
select(Site_ID, Observer, Temp, Avg_Noise, dayOfYear, mas)
habitatAndSurveyData$Observer <- factor(habitatAndSurveyData$Observer)
covs <-
habitatAndSurveyData %>%
select(Site_ID, Observer, Temp, Avg_Noise, dayOfYear, mas)
umf <- unmarkedFrameDS(y = as.matrix(yDat), siteCovs = as.data.frame(covs),
survey = "point", dist.breaks = c(0,25,100,200,400), unitsIn = "m")
## Create a data frame of site-level covariates.
covs <-
surveyData %>%
select(Site_ID, Observer, Temp, Avg_Noise, dayOfYear, mas)
umf <- unmarkedFrameDS(y = as.matrix(yDat), siteCovs = as.data.frame(covs),
survey = "point", dist.breaks = c(0,25,100,200,400), unitsIn = "m")
levels(dists$Site_ID)
levels(surveyData$Site_ID)
View(covs)
covs <-
surveyData %>%
group_by(Site_ID) %>%
summarise(site = first(Site_ID),
observer = first(Observer),
temp = first(Temp),
avgNoise = first(Avg_Noise),
dayOfYear = first (dayOfYear),
mas = first(mas))
View(covs)
umf <- unmarkedFrameDS(y = as.matrix(yDat), siteCovs = as.data.frame(covs),
survey = "point", dist.breaks = c(0,25,100,200,400), unitsIn = "m")
surveyData$Observer <- factor(surveyData$Observer)
## Create a data frame of site-level covariates.
covs <-
surveyData %>%
group_by(Site_ID) %>%
summarise(site = first(Site_ID),
observer = first(Observer),
temp = first(Temp),
avgNoise = first(Avg_Noise),
dayOfYear = first (dayOfYear),
mas = first(mas))
umf <- unmarkedFrameDS(y = as.matrix(yDat), siteCovs = as.data.frame(covs),
survey = "point", dist.breaks = c(0,25,100,200,400), unitsIn = "m")
summary(umf)
hist(umf, xlab = "Distance (m)", main = "", cex.lab = 0.8, cex.axis = 0.8)
hist(umf, freq = TRUE, xlab = "Distance (m)", main = "", cex.lab = 0.8, cex.axis = 0.8)
hist(umf, freq = TRUE, xlab = "Distance (m)", main = "Streaked Horned Lark detections 2022", cex.lab = 0.8, cex.axis = 0.8)
# Fitting models.
# Half-normal, null
hnNull <- distsamp(~1~1, umf)
hnNull
backTransform(hnNull, type = "det")
exp(80.3)
exp(4.39)
sig <- exp(coef(hnNull, type="det"))
ea <- 2*pi * integrate(grhn, 0, 400, sigma=sig)$value # effective area
sqrt(ea / pi) # effective radius
# detection probability
ea / (pi*25^2)
# detection probability
ea / (pi*400^2)
backTransform(hnNull, type = "state")
# Fitting models.
# Half-normal, null
hnNull <- distsamp(~1~1, umf, keyfun = "halfnorm", output = "density", unitsOut = "ha")
hnNull
backTransform(hnNull, type = "state")
# Fitting models.
# Half-normal, null
hnNull <- distsamp(~1~1, umf, keyfun = "halfnorm", output = "density", unitsOut = "kmsq")
hnNull
backTransform(hnNull, type = "state")
# detection probability
ea / (pi*400^2)
hnMAS <- distsamp(~mas ~1, umf, keyfun = "halfnorm", output = "density", unitsOut = "kmsq")
hnMAS
hnDay <- distsamp(~dayOfYear ~1, data = umf, keyfun = "halfnorm", output = "density", unitsOut = "kmsq")
hnDay
exp(coef(hnNull, type="det"))
backTransform(hnNull, type = "det")
sig
backTransform(hnMAS, type = "state")
backTransform(hnDay, type = "state")
backTransform(linearComb(hnDay['det'], c(1, mean(covs$dayOfYear))))
exp(80.3)
coef(hnNull, type = "det")
exp(4.38)
exp(4.386121)
coef(hnDay, type = "det")
sig
sig <- exp(coef(hnNull, type="det"))
ea <- 2*pi * integrate(grhn, 0, 400, sigma=72.1)$value # effective area
sqrt(ea / pi) # effective radius
# detection probability
ea / (pi*400^2)
backTransform(linearComb(hnDay['det'], c(1, mean(covs$dayOfYear))))
cc <- backTransform(linearComb(hnDay['det'], c(1, mean(covs$dayOfYear))))
sig <- exp(cc@estimate)
ea <- 2*pi * integrate(grhn, 0, 400, sigma=sig)$value # effective area
sqrt(ea / pi) # effective radius
# detection probability
ea / (pi*400^2)
cc@estimate
sig <- cc@estimate
ea <- 2*pi * integrate(grhn, 0, 400, sigma=sig)$value # effective area
sqrt(ea / pi) # effective radius
# detection probability
ea / (pi*400^2)
cc <- backTransform(linearComb(hnDay['det'], c(1, mean(covs$dayOfYear))))
backTransform(linearComb(hnDay['det'], c(1, mean(covs$dayOfYear))))@estimate
rm(cc)
#Back-transformed detection probability for the average day of year
sig <- backTransform(linearComb(hnDay['det'], c(1, mean(covs$dayOfYear))))@estimate
ea <- 2*pi * integrate(grhn, 0, 400, sigma=sig)$value # effective area
sqrt(ea / pi) # effective radius
# detection probability
ea / (pi*400^2)
